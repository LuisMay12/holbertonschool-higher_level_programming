"""
Doctest for BaseGeometry.integer_validator method.

>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
>>> bg = BaseGeometry()

>>> bg.integer_validator("my_int", 12)

>>> bg.integer_validator("width", 89)

>>> bg.integer_validator("name", "John")
Traceback (most recent call last):
    ...
TypeError: name must be an integer

>>> bg.integer_validator("age", 0)
Traceback (most recent call last):
    ...
ValueError: age must be greater than 0

>>> bg.integer_validator("distance", -4)
Traceback (most recent call last):
    ...
ValueError: distance must be greater than 0

# Test: area() should raise Exception
>>> bg.area()
Traceback (most recent call last):
...
Exception: area() is not implemented

# Test: Valid calls to integer_validator()
>>> bg.integer_validator("my_int", 12)
>>> bg.integer_validator("width", 1)

# Test: invalid types for integer_validator()
>>> bg.integer_validator("age", "4")
Traceback (most recent call last):
...
TypeError: age must be an integer

>>> bg.integer_validator("age", (4,))
Traceback (most recent call last):
...
TypeError: age must be an integer

>>> bg.integer_validator("age", [3])
Traceback (most recent call last):
...
TypeError: age must be an integer

>>> bg.integer_validator("age", True)
Traceback (most recent call last):
...
TypeError: age must be an integer

>>> bg.integer_validator("age", {3, 4})
Traceback (most recent call last):
...
TypeError: age must be an integer

>>> bg.integer_validator("age", None)
Traceback (most recent call last):
...
TypeError: age must be an integer

# Test: invalid values (0 or negative)
>>> bg.integer_validator("age", 0)
Traceback (most recent call last):
...
ValueError: age must be greater than 0

>>> bg.integer_validator("age", -2)
Traceback (most recent call last):
...
ValueError: age must be greater than 0

>>> bg.integer_validator("age")
Traceback (most recent call last):
...
TypeError: BaseGeometry.integer_validator() missing 1 required positional argument: 'value'
